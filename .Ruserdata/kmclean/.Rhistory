"issue" = issue, "pages" = page, "cite_cr" = `is-referenced-by-count`)
return(y)}) %>%
data.table::rbindlist(.) %>% as_tibble()}else{
x <- rcrossref::cr_cn(dois = doi, format = "citeproc-json")
x <- x[which(names(x) %in% extract_var)]
if(is.null(x$`published-online`)==F){
x$year <- ifelse(length(x$`published-online`$`date-parts`)>1,
x$`published-online`$`date-parts`[1,1],
x$`published-online`)}
if(is.null(x$`published-print`)==F){
x$year <- ifelse(length(x$`published-print`$`date-parts`)>1,
x$`published-print`$`date-parts`[1,1],
x$`published-print`)}
x$ISSN <- x$ISSN[1]
x$page <- paste(x$page, collapse="-")
df_na <- NULL
if(length(extract_var[which(extract_var %ni% names(x))])>0){
df_na <- rbind.data.frame(rep(NA, length(extract_var[which(extract_var %ni% names(x))])))
colnames(df_na) <- extract_var[which(extract_var %ni% names(x))]}
out_crossref <- tibble::as_tibble(x)
if(is.null(df_na)==F){out_crossref <- cbind.data.frame(out_crossref, df_na)}
out_crossref <- out_crossref %>%
dplyr::select("doi" = "DOI", "journal_abbr" = `container-title-short`,"journal_full" = `container-title`,
"journal_issn" = ISSN,"title" = title, "year" = year, "volume" = volume,
"issue" = issue, "pages" = page, "cite_cr" = `is-referenced-by-count`)}
out_crossref %>% dplyr::mutate_all(function(x){x <- ifelse(x=="", NA, x)})
out_crossref %>% dplyr::mutate_all(function(x){x <- ifelse(x=="", NA, x)}) %>%
dplyr::mutate(doi = tolower(doi)) %>%
dplyr::select(doi, title, year, journal_abbr,volume,issue,pages,cite_cr, everything())
out_crossref <- out_crossref %>% dplyr::mutate_all(function(x){x <- ifelse(x=="", NA, x)}) %>%
dplyr::mutate(doi = tolower(doi)) %>%
dplyr::select(doi, title, year, journal_abbr,volume,issue,pages,cite_cr, everything())
if(get_auth==TRUE){crossref_auth <- impactr::extract_doi_auth(doi)
if(get_auth==TRUE){crossref_auth <- impactr::extract_doi_auth(doi)
out_crossref <- dplyr::left_join(out_crossref, crossref_auth, by=c("doi")) %>%
dplyr::select(doi, author_group, title:cite_cr, auth_n, "author" = auth_list, everything())}
get_auth=
TRUE
if(get_auth==TRUE){crossref_auth <- impactr::extract_doi_auth(doi)
out_crossref <- dplyr::left_join(out_crossref, crossref_auth, by=c("doi")) %>%
dplyr::select(doi, author_group, title:cite_cr, auth_n, "author" = auth_list, everything())}
doi
extract_doi_auth1 <- function(doi){
author <- rcrossref::cr_works(doi = doi)$data$author[[1]]
if(is.null(author)==T){author2 <- tibble::tibble(author_group = NA, auth_n = NA, auth_list = NA)}else{
if("given" %in% names(author)){author2 <- author %>%
dplyr::mutate(initials = paste0(substr(stringr::str_split_fixed(given, " ", 3)[,1],1,1),
substr(stringr::str_split_fixed(given, " ", 3)[,2],1,1),
substr(stringr::str_split_fixed(given, " ", 3)[,3],1,1))) %>%
dplyr::mutate(name = paste0(family, " ", initials)) %>%
dplyr::summarise(author_group = NA,
auth_n = n(),
auth_list =  paste(name, collapse=", "))}else{author2 <- tibble::tibble(author_group = author$name,
auth_n = NA, auth_list = NA)}}
return(author2)}
doi <- doi[which(doi %ni% NA)] # ensure no NA
doi %>%
lapply(., function(x){extract_doi_auth1(x)}) %>%
data.table::rbindlist(.,idcol=doi)
oi %>%
lapply(., function(x){extract_doi_auth1(x)}) %>%
data.table::rbindlist(.,idcol=doi) %>%
dplyr::mutate(doi = tolower(doi)) %>%
dplyr::mutate(auth_list = gsub("NA , ", "", auth_list)) %>%
dplyr::mutate(auth_list = gsub(", NA", "", auth_list)) %>%
dplyr::select(doi, author_group, auth_n, auth_list) %>%
tibble::as_tibble()
doi %>%
lapply(., function(x){extract_doi_auth1(x)}) %>%
data.table::rbindlist(.,idcol=doi) %>%
dplyr::mutate(doi = tolower(doi)) %>%
dplyr::mutate(auth_list = gsub("NA , ", "", auth_list)) %>%
dplyr::mutate(auth_list = gsub(", NA", "", auth_list)) %>%
dplyr::select(doi, author_group, auth_n, auth_list) %>%
tibble::as_tibble()
# extract_doi_auth--------------------------------
# Documentation
#' Extract publication data on authorship using doi / crossref
#' @description Extract publication data on authorship using doi / rcrossref
#' @param doi Vector of Digital Object Identifiers (DOI)
#' @return Dataframe authorship data for each DOI.
#' @import magrittr
#' @import dplyr
#' @import tibble
#' @importFrom rcrossref cr_cn cr_works
#' @importFrom rAltmetric altmetric_data altmetrics
#' @importFrom purrr map
#' @importFrom data.table rbindlist
#' @export
# Function-------------------------------
extract_doi_auth <- function(doi){
"%ni%" <- Negate("%in%")
extract_doi_auth1 <- function(doi){
author <- rcrossref::cr_works(doi = doi)$data$author[[1]]
if(is.null(author)==T){author2 <- tibble::tibble(author_group = NA, auth_n = NA, auth_list = NA)}else{
if("given" %in% names(author)){author2 <- author %>%
dplyr::mutate(initials = paste0(substr(stringr::str_split_fixed(given, " ", 3)[,1],1,1),
substr(stringr::str_split_fixed(given, " ", 3)[,2],1,1),
substr(stringr::str_split_fixed(given, " ", 3)[,3],1,1))) %>%
dplyr::mutate(name = paste0(family, " ", initials)) %>%
dplyr::summarise(author_group = NA,
auth_n = n(),
auth_list =  paste(name, collapse=", "))}else{author2 <- tibble::tibble(author_group = author$name,
auth_n = NA, auth_list = NA)}}
return(author2)}
doi <- doi[which(doi %ni% NA)] # ensure no NA
df_auth <- doi %>%
lapply(., function(x){extract_doi_auth1(x)}) %>%
data.table::rbindlist(.,idcol=doi) %>%
dplyr::mutate(doi = tolower(doi)) %>%
dplyr::mutate(auth_list = gsub("NA , ", "", auth_list)) %>%
dplyr::mutate(auth_list = gsub(", NA", "", auth_list)) %>%
dplyr::select(doi, author_group, auth_n, auth_list) %>%
tibble::as_tibble()
return(df_auth)}
var_issn = "journal_issn"
df <- out_crossref
df
update.packages("sjrdata")
df <- df %>%
dplyr::mutate(journal_issn = dplyr::pull(., var_issn)) %>%
dplyr::mutate(journal_issn = gsub("-","", journal_issn)) %>%
tidyr::separate_rows(., journal_issn, sep = ", ")  %>%
dplyr::mutate(journal_issn = trimws(journal_issn))
out <- sjrdata::sjr_journals %>%
dplyr::filter(type=="journal") %>%
dplyr::select(year, "journal_full" = title, "journal_issn" = issn, "journal_if" = cites_doc_2years) %>%
dplyr::mutate(journal_issn = ifelse(grepl("09598146", journal_issn)==T,
"17561833, 09598146, 09598138", journal_issn), # bmj
journal_issn = ifelse(grepl("01406736|1474547", journal_issn)==T,
"1474547X, 01406736, 1474547", journal_issn),
journal_issn = ifelse(grepl("00029610", journal_issn)==T,
"18791883, 00029610", journal_issn)) %>% #AJoS
dplyr::filter(grepl(paste(df$journal_issn, collapse="|"), journal_issn)) %>%
dplyr::mutate(journal_issn = stringr::str_split(journal_issn, ", "),
year = as.numeric(year)) %>%
tidyr::unnest(journal_issn) %>%
dplyr::filter(journal_issn %in% df$journal_issn)
# Last IF recorded for missing years
df_missing_max <- NULL
if(max(df$year)>max(out$year)){
max_year_miss <- seq(max(out$year)+1, max(df$year))
df_missing_max <- purrr::map_df(max_year_miss, ~dplyr::filter(out, year==max(year))) %>%
mutate(year = rep(max_year_miss, each=nrow(dplyr::filter(out, year==max(year)))))}
df_missing_min <- NULL
if(min(df$year)<min(out$year)){
min_year_miss <- seq(min(df$year), min(out$year)-1)
df_missing_min <- purrr::map_df(min_year_miss, ~dplyr::filter(out, year==min(year))) %>%
mutate(year = rep(min_year_miss, each=nrow(dplyr::filter(out, year==min(year)))))}
out %>%
dplyr::bind_rows(df_missing_max, df_missing_min) %>%
dplyr::select(-journal_full) %>%
dplyr::left_join(df, ., by=c("year", "journal_issn"))
df <- out_crossref
var_id = "doi"
update.packages("sjrdata")
df <- df %>%
dplyr::mutate(journal_issn = dplyr::pull(., var_issn),
var_id = dplyr::pull(., var_id)) %>%
dplyr::mutate(journal_issn = gsub("-","", journal_issn)) %>%
tidyr::separate_rows(., journal_issn, sep = ", ")  %>%
dplyr::mutate(journal_issn = trimws(journal_issn))
out <- sjrdata::sjr_journals %>%
dplyr::filter(type=="journal") %>%
dplyr::select(year, "journal_full" = title, "journal_issn" = issn, "journal_if" = cites_doc_2years) %>%
dplyr::mutate(journal_issn = ifelse(grepl("09598146", journal_issn)==T,
"17561833, 09598146, 09598138", journal_issn), # bmj
journal_issn = ifelse(grepl("01406736|1474547", journal_issn)==T,
"1474547X, 01406736, 1474547", journal_issn),
journal_issn = ifelse(grepl("00029610", journal_issn)==T,
"18791883, 00029610", journal_issn)) %>% #AJoS
dplyr::filter(grepl(paste(df$journal_issn, collapse="|"), journal_issn)) %>%
dplyr::mutate(journal_issn = stringr::str_split(journal_issn, ", "),
year = as.numeric(year)) %>%
tidyr::unnest(journal_issn) %>%
dplyr::filter(journal_issn %in% df$journal_issn)
# Last IF recorded for missing years
df_missing_max <- NULL
if(max(df$year)>max(out$year)){
max_year_miss <- seq(max(out$year)+1, max(df$year))
df_missing_max <- purrr::map_df(max_year_miss, ~dplyr::filter(out, year==max(year))) %>%
mutate(year = rep(max_year_miss, each=nrow(dplyr::filter(out, year==max(year)))))}
df_missing_min <- NULL
if(min(df$year)<min(out$year)){
min_year_miss <- seq(min(df$year), min(out$year)-1)
df_missing_min <- purrr::map_df(min_year_miss, ~dplyr::filter(out, year==min(year))) %>%
mutate(year = rep(min_year_miss, each=nrow(dplyr::filter(out, year==min(year)))))}
out %>%
dplyr::bind_rows(df_missing_max, df_missing_min) %>%
dplyr::select(-journal_full) %>%
dplyr::left_join(df, ., by=c("year", "journal_issn"))
extract_impact_factor <- function(df, var_id = "pmid", var_issn = "journal_issn"){
update.packages("sjrdata")
df <- df %>%
dplyr::mutate(journal_issn = dplyr::pull(., var_issn),
var_id = dplyr::pull(., var_id)) %>%
dplyr::mutate(journal_issn = gsub("-","", journal_issn)) %>%
tidyr::separate_rows(., journal_issn, sep = ", ")  %>%
dplyr::mutate(journal_issn = trimws(journal_issn))
out <- sjrdata::sjr_journals %>%
dplyr::filter(type=="journal") %>%
dplyr::select(year, "journal_full" = title, "journal_issn" = issn, "journal_if" = cites_doc_2years) %>%
dplyr::mutate(journal_issn = ifelse(grepl("09598146", journal_issn)==T,
"17561833, 09598146, 09598138", journal_issn), # bmj
journal_issn = ifelse(grepl("01406736|1474547", journal_issn)==T,
"1474547X, 01406736, 1474547", journal_issn),
journal_issn = ifelse(grepl("00029610", journal_issn)==T,
"18791883, 00029610", journal_issn)) %>% #AJoS
dplyr::filter(grepl(paste(df$journal_issn, collapse="|"), journal_issn)) %>%
dplyr::mutate(journal_issn = stringr::str_split(journal_issn, ", "),
year = as.numeric(year)) %>%
tidyr::unnest(journal_issn) %>%
dplyr::filter(journal_issn %in% df$journal_issn)
# Last IF recorded for missing years
df_missing_max <- NULL
if(max(df$year)>max(out$year)){
max_year_miss <- seq(max(out$year)+1, max(df$year))
df_missing_max <- purrr::map_df(max_year_miss, ~dplyr::filter(out, year==max(year))) %>%
mutate(year = rep(max_year_miss, each=nrow(dplyr::filter(out, year==max(year)))))}
df_missing_min <- NULL
if(min(df$year)<min(out$year)){
min_year_miss <- seq(min(df$year), min(out$year)-1)
df_missing_min <- purrr::map_df(min_year_miss, ~dplyr::filter(out, year==min(year))) %>%
mutate(year = rep(min_year_miss, each=nrow(dplyr::filter(out, year==min(year)))))}
out2 <- out %>%
dplyr::bind_rows(df_missing_max, df_missing_min) %>%
dplyr::select(-journal_full) %>%
dplyr::left_join(df, ., by=c("year", "journal_issn")) %>%
dplyr::arrange(var_id, journal_if) %>%
dplyr::mutate(journal_if = zoo::na.locf(journal_if)) %>%
dplyr::group_by(var_id) %>%
dplyr::mutate(journal_issn = paste(journal_issn, collapse=", ")) %>%
dplyr::distinct(var_id, journal_issn, .keep_all = TRUE) %>%
dplyr::ungroup(var_id) %>%
dplyr::select(-var_id)
return(out2)}
extract_impact_factor(out_crossref, var_id="doi")
library(impactr)
impactr::extract_doi(doi = '10.1016/j.contraception.2015.11.002')
impactr::extract_doi(doi = '10.1016/j.contraception.2015.11.002')
out_pubmed <- impactr::extract_pmid(pmid = c(26769786, 26195471, 30513129))
out_pubmed <- impactr::extract_pmid(pmid = c(26569447))
out_pubmed
out_pubmed
impactr::extract_doi(doi = '10.1016/j.contraception.2015.11.002')
data_cite <- impactr::impact_cite(df = data, crossref=TRUE, dimentions=TRUE, scopus=FALSE, oc = TRUE,
gscholar = "Ol5uNSwAAAAJ&hl", metric=TRUE)
rscopus::get_api_key()
rscopus::have_api_key()
scopus==T&rscopus::have_api_key()
# impact_cite----------------------
# Documentation
#' @title Extract additional traditional metrics from Google Scholar
#' @description Extract additional traditional metrics from Google Scholar
#' @param df Dataframe containing at least two columns: publication year ("year") and DOI ("doi") with each publication listed as a row.
#' @param crossref Crossref database to be used for citation data (default=TRUE)
#' @param dimentions Dimentions database to be used for citation data (default=TRUE)
#' @param scopus Scopus database to be used for citation data (default=FALSE). Requires Scopus API.
#' @param oc Open citations database to be used for citation data (default=FALSE due to sparse population at present).
#' @param gscholar Google scholar database to be used for citation data (default=FALSE). Requires Google Scholar ID (and all relevent publications to be associated with this).
#' @param gscholar_title_nchar Argument to specify how many characters the titles should be matched (default = 50). See "gscholar_invalid" output.
#' @param metric Return common citation metrics (default = TRUE)
#' @import magrittr
#' @import dplyr
#' @import tibble
#' @return Nested dataframe of: (1)."df": Amended dataframe with additional citation data appended (2). "time": Dataframe of citations over time (only avaiable for Scopus and google scholar). (3). "metric": output from impact_cite_metric() (4). Unmatched recorded (only for google scholar)
#' @export
impact_cite <- function(df, crossref=TRUE, dimentions=TRUE, scopus=FALSE, oc = FALSE,
gscholar=FALSE, gscholar_title_nchar = 50, metric=TRUE){
# Get citation data
require(dplyr)
if(crossref==T&"doi" %in% names(df)){
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_cr = impactr::cite_cr(doi)$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_cr")), by = "doi") %>%
dplyr::select(-cite_cr, everything())}
if(dimentions==T&"doi" %in% names(df)){
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_dim = impactr::cite_dim(doi)$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_dim")), by = "doi") %>%
dplyr::select(-cite_dim, everything())} # to move cite_dim last
if(scopus==T){
if(scopus==T&"doi" %in% names(df)&rscopus::have_api_key()==T){
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_scopus = impactr::cite_scopus(doi)$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_scopus")), by = "doi") %>%
dplyr::select(-cite_scopus, everything())}else{print("Please use rscopus::set_api_key() with a valid api")}}
data_oc <- NULL
if(oc==T&"doi" %in% names(df)){
doi_oc <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::pull(doi)
data_oc <- impactr::cite_oc(doi_oc)
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_oc = data_oc$total$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_oc")), by = "doi") %>%
dplyr::select(-cite_oc, everything())}
data_gs <- NULL
gscholar_invalid <- NULL
if(gscholar!=FALSE){
data_gs <- suppressMessages(suppressWarnings(impactr::cite_gs(df, gscholar_id = gscholar, match_title_nchar = gscholar_title_nchar)))
df <- data_gs$df
gscholar_invalid <- data_gs$validation}
df_out <- df %>%
dplyr::mutate_at(.vars = dplyr::vars(dplyr::starts_with("cite_")), as.numeric) %>%
dplyr::mutate(cite_max = apply(dplyr::select(., dplyr::starts_with("cite_")), 1, function(x){suppressWarnings(max(x, na.rm=T))})) %>%
dplyr::mutate(cite_max = ifelse(cite_max==-Inf, NA, cite_max))
df_time <- NULL
if(is.null(data_gs)==F|is.null(data_oc)==F){
time_gs <- NULL
if(is.null(data_gs)==F){
time_gs  <- data_gs$year %>%
dplyr::mutate(source = "gs") %>%
dplyr::select(source, doi, cite_year,cite_n,cite_cumsum) %>%
dplyr::mutate_all(as.character)}
time_oc <- NULL
if(is.null(data_oc)==F){
time_oc  <- data_oc$year %>%
dplyr::mutate(source = "oc") %>%
dplyr::select(source, everything()) %>%
dplyr::mutate_all(as.character)}
df_time <- dplyr::bind_rows(time_gs,time_oc) %>%
dplyr::mutate(source = factor(source),
doi = factor(doi),
cite_year = factor(cite_year, levels=sort(unique(cite_year))),
cite_n = as.numeric(cite_n),
cite_cumsum = as.numeric(cite_cumsum))}
df_metric <- NULL
if(metric==TRUE){df_metric <- suppressWarnings(impact_cite_metric(citations = df_out$cite_max, year = df_out$year))}
df_out <- list("df" = df_out, "time" = df_time, "metric" = df_metric, "gscholar_invalid" = gscholar_invalid)
if(gscholar==FALSE){df_out$gscholar_invalid <- NULL}
if(is.null(data_gs)==T&is.null(data_oc)==T){df_out$time <- NULL}
if(metric!=TRUE){df_out$metric <- NULL}
return(df_out)}
knitr::opts_chunk$set(collapse = FALSE)
library(tidyverse);library(magrittr)
pmid <- readRDS("~/starsurg_impact/data/impact_pub.rds")$pmid
data <- impactr::extract_pmid(pmid) %>%
dplyr::mutate(journal_edit = ifelse(journal_full=="The Lancet", "Lancet", journal_full),
journal_edit = ifelse(journal_edit=="British Medical Journal", "BMJ-British Medical Journal", journal_edit))
data_cite <- impactr::impact_cite(df = data, crossref=TRUE, dimentions=TRUE, scopus=FALSE, oc = TRUE,
gscholar = "Ol5uNSwAAAAJ&hl", metric=TRUE)
data_cite <- impactr::impact_cite(df = data, crossref=TRUE, dimentions=TRUE, scopus=FALSE, oc = TRUE,
gscholar = F, metric=TRUE) # "Ol5uNSwAAAAJ&hl"
df = data
scopus=FALSE
# Get citation data
require(dplyr)
if(crossref==T&"doi" %in% names(df)){
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_cr = impactr::cite_cr(doi)$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_cr")), by = "doi") %>%
dplyr::select(-cite_cr, everything())}
scopus==T
if(scopus==T){
if(scopus==T&"doi" %in% names(df)&rscopus::have_api_key()==T){
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_scopus = impactr::cite_scopus(doi)$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_scopus")), by = "doi") %>%
dplyr::select(-cite_scopus, everything())}else{print("Please use rscopus::set_api_key() with a valid api")}}
data_cite <- impact_cite(df = data, crossref=TRUE, dimentions=TRUE, scopus=FALSE, oc = TRUE,
gscholar = F, metric=TRUE) # "Ol5uNSwAAAAJ&hl"
cite_max <- data_cite$df %$% max(cite_gs, na.rm=TRUE)
data_cite <- impact_cite(df = data, crossref=TRUE, dimentions=TRUE, scopus=FALSE, oc = TRUE,
gscholar = "Ol5uNSwAAAAJ&hl", metric=TRUE)
data_cite$df %>%
dplyr::select(doi, title, journal_edit, journal_if,
cite_pm,	cite_gs) %>%
magrittr::set_colnames(gsub("_", " ", names(.))) %>%
dplyr::mutate(`journal edit` = ifelse(`journal edit`=="The British journal of surgery", "BJS", `journal edit`),
`journal edit` = ifelse(`journal edit`=="Colorectal disease : the official journal of the Association of Coloproctology of Great Britain and Ireland", "Colorectal Disease", `journal edit`)) %>%
knitr::kable(format="html") %>%
kableExtra::column_spec(which(colnames(.) %in% c("title")), width_min="7in") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = F) %>%
kableExtra::scroll_box(height = "400px",width = "1000px")
cite_max <- data_cite$df %$% max(cite_gs, na.rm=TRUE)
plot_cite_difference <- data_cite$df %>%
dplyr::select(cite_gs, cite_cr) %>%
ggplot() +
geom_point(aes(x = cite_cr, y = cite_gs)) +
scale_x_continuous(breaks=c(seq(0, cite_max, by=5)),
limits = c(0, max(data_cite$df$cite_cr, na.rm=TRUE)), expand = c(0, 0.5)) +
scale_y_continuous(breaks=c(seq(0, cite_max, by=5)),
limits = c(0, max(data_cite$df$cite_gs, na.rm=TRUE)), expand = c(0, 0.5)) +
labs(x = "Citations per publication on CrossRef", y = "Citations per publication on Google Scholar") +
theme_bw()
ggsave(plot_cite_difference, filename = "~/impactr/vignettes/plot/plot_cite_difference.png",
height = 5.76*0.75, width = 9.60*0.75)
cite_max <- data_cite$df %$% max(cite_gs, na.rm=TRUE)
plot_cite_difference <- data_cite$df %>%
dplyr::select(cite_gs, cite_cr) %>%
ggplot() +
geom_point(aes(x = cite_cr, y = cite_gs)) +
scale_x_continuous(breaks=c(seq(0, cite_max, by=5)),
limits = c(0, max(data_cite$df$cite_cr, na.rm=TRUE)), expand = c(0, 0.5)) +
scale_y_continuous(breaks=c(seq(0, cite_max, by=5)),
limits = c(0, max(data_cite$df$cite_gs, na.rm=TRUE)), expand = c(0, 0.5)) +
labs(x = "Citations per publication on CrossRef", y = "Citations per publication on Google Scholar") +
theme_bw()
ggsave(plot_cite_difference, filename = "~/impactr/vignettes/plot/plot_cite_difference.png",
height = 5.76*0.75, width = 9.60*0.75)
cite_max <- data_cite$df %$% max(cite_gs, na.rm=TRUE)
plot_cite_time <- data_cite$time %>%
dplyr::filter(source == "gs") %>%
dplyr::filter(is.na(cite_cumsum)==F) %>%
dplyr::mutate(cite_year = forcats::fct_drop(cite_year)) %>%
# dplyr::group_by(source) %>%
ggplot() +
aes(x = cite_year, y = cite_cumsum, group = doi, fill = doi) +
# geom_line() +
geom_area(position = 'stack', colour = "black") +
labs(x = "Year of Citation", y = "Cumulative total of citations per publication") +
guides(fill=FALSE) +
theme_bw(base_size = 13)
ggsave(plot_cite_time, filename = "~/impactr/vignettes/plot/plot_cite_difference.png",
height = 5.76*0.75, width = 9.60*0.75)
cite_max <- data_cite$df %$% max(cite_gs, na.rm=TRUE)
plot_cite_time <- data_cite$time %>%
dplyr::filter(source == "gs") %>%
dplyr::filter(is.na(cite_cumsum)==F) %>%
dplyr::mutate(cite_year = forcats::fct_drop(cite_year)) %>%
# dplyr::group_by(source) %>%
ggplot() +
aes(x = cite_year, y = cite_cumsum, group = doi, fill = doi) +
# geom_line() +
geom_area(position = 'stack', colour = "black") +
labs(x = "Year of Citation", y = "Cumulative total of citations per publication") +
guides(fill=FALSE) +
theme_bw(base_size = 13)
ggsave(plot_cite_time, filename = "~/impactr/vignettes/plot/plot_cite_time.png",
height = 5.76*0.75, width = 9.60*0.75)
library(impactr)
library(impactr)
devtools::document()
devtools::document()
library(impactr)
packrat::init(options = list(external.packages = c("ComplexHeatmap", "sjrdata")))
packrat::init(options = list(external.packages = c("ComplexHeatmap", "sjrdata")))
library(impactr)
data_auth <- readRDS("~/starsurg_impact/data_auth.rds")
edisurg_10 <- readRDS("~/starsurg_impact/edi_surg/data/edisurg_10.rds")
citations = edisurg_10$cite_pm
year = edisurg_10$year
if(length(citations)==length(year)){df <- dplyr::bind_cols("n_cite" = citations,
"year" = as.numeric(year))}
if(length(citations)!=length(year)){df <- dplyr::bind_cols("n_cite" = citations,
"year" = rep(min(as.numeric(year)),
length(citations)))}
if(year==""){df <- dplyr::bind_cols("n_cite" = citations,
"year" = rep(NA,
length(citations)))}
year
df
table(df$year)
df %>%
dplyr::select(year, n_cite) %>%
dplyr::arrange(-n_cite) %>%
dplyr::filter(is.na(n_cite)==F) %>%
tibble::rowid_to_column(var = "id") %>%
dplyr::mutate(gindex_square = id^2,
gindex_cumsum = cumsum(n_cite),
total_cite = sum(n_cite)) %>%
dplyr::mutate(hindex = max(which(id<=n_cite)),
gindex = max(which(gindex_square<gindex_cumsum)))
require(dplyr)
df %>%
dplyr::select(year, n_cite) %>%
dplyr::arrange(-n_cite) %>%
dplyr::filter(is.na(n_cite)==F) %>%
tibble::rowid_to_column(var = "id") %>%
dplyr::mutate(gindex_square = id^2,
gindex_cumsum = cumsum(n_cite),
total_cite = sum(n_cite)) %>%
dplyr::mutate(hindex = max(which(id<=n_cite)),
gindex = max(which(gindex_square<gindex_cumsum)))
df %>%
dplyr::select(year, n_cite) %>%
dplyr::arrange(-n_cite) %>%
dplyr::filter(is.na(n_cite)==F) %>%
tibble::rowid_to_column(var = "id") %>%
dplyr::mutate(gindex_square = id^2,
gindex_cumsum = cumsum(n_cite),
total_cite = sum(n_cite)) %>%
dplyr::mutate(hindex = max(which(id<=n_cite)),
gindex = max(which(gindex_square<gindex_cumsum))) %>%
dplyr::mutate(mquotient = unique(hindex)/(year))
df %>%
dplyr::select(year, n_cite) %>%
dplyr::arrange(-n_cite) %>%
dplyr::filter(is.na(n_cite)==F) %>%
tibble::rowid_to_column(var = "id") %>%
dplyr::mutate(gindex_square = id^2,
gindex_cumsum = cumsum(n_cite),
total_cite = sum(n_cite)) %>%
dplyr::mutate(hindex = max(which(id<=n_cite)),
gindex = max(which(gindex_square<gindex_cumsum))) %>%
dplyr::mutate(mquotient = unique(hindex)/(year)) %>%
head(1) %>% dplyr::select(total_cite:mquotient)
library(impactr)
